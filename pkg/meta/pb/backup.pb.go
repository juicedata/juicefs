// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: pkg/meta/pb/backup.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Format struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // meta.Format's json format
}

func (x *Format) Reset() {
	*x = Format{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Format) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Format) ProtoMessage() {}

func (x *Format) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Format.ProtoReflect.Descriptor instead.
func (*Format) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{0}
}

func (x *Format) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Counter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Counter) Reset() {
	*x = Counter{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Counter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Counter) ProtoMessage() {}

func (x *Counter) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Counter.ProtoReflect.Descriptor instead.
func (*Counter) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{1}
}

func (x *Counter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Counter) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Sustained struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid    uint64   `protobuf:"varint,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Inodes []uint64 `protobuf:"varint,2,rep,packed,name=inodes,proto3" json:"inodes,omitempty"`
}

func (x *Sustained) Reset() {
	*x = Sustained{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sustained) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sustained) ProtoMessage() {}

func (x *Sustained) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sustained.ProtoReflect.Descriptor instead.
func (*Sustained) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{2}
}

func (x *Sustained) GetSid() uint64 {
	if x != nil {
		return x.Sid
	}
	return 0
}

func (x *Sustained) GetInodes() []uint64 {
	if x != nil {
		return x.Inodes
	}
	return nil
}

type DelFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode  uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *DelFile) Reset() {
	*x = DelFile{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFile) ProtoMessage() {}

func (x *DelFile) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFile.ProtoReflect.Descriptor instead.
func (*DelFile) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{3}
}

func (x *DelFile) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *DelFile) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *DelFile) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

type SliceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Size uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Refs int64  `protobuf:"varint,3,opt,name=refs,proto3" json:"refs,omitempty"`
}

func (x *SliceRef) Reset() {
	*x = SliceRef{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SliceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceRef) ProtoMessage() {}

func (x *SliceRef) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceRef.ProtoReflect.Descriptor instead.
func (*SliceRef) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{4}
}

func (x *SliceRef) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SliceRef) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SliceRef) GetRefs() int64 {
	if x != nil {
		return x.Refs
	}
	return 0
}

type Acl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // acl.Rule's binary format
}

func (x *Acl) Reset() {
	*x = Acl{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acl.ProtoReflect.Descriptor instead.
func (*Acl) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{5}
}

func (x *Acl) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Acl) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Xattr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Xattr) Reset() {
	*x = Xattr{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Xattr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Xattr) ProtoMessage() {}

func (x *Xattr) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Xattr.ProtoReflect.Descriptor instead.
func (*Xattr) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{6}
}

func (x *Xattr) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Xattr) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Xattr) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type Quota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode      uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	MaxSpace   int64  `protobuf:"varint,2,opt,name=maxSpace,proto3" json:"maxSpace,omitempty"`
	MaxInodes  int64  `protobuf:"varint,3,opt,name=maxInodes,proto3" json:"maxInodes,omitempty"`
	UsedSpace  int64  `protobuf:"varint,4,opt,name=usedSpace,proto3" json:"usedSpace,omitempty"`
	UsedInodes int64  `protobuf:"varint,5,opt,name=usedInodes,proto3" json:"usedInodes,omitempty"`
}

func (x *Quota) Reset() {
	*x = Quota{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quota) ProtoMessage() {}

func (x *Quota) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quota.ProtoReflect.Descriptor instead.
func (*Quota) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{7}
}

func (x *Quota) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Quota) GetMaxSpace() int64 {
	if x != nil {
		return x.MaxSpace
	}
	return 0
}

func (x *Quota) GetMaxInodes() int64 {
	if x != nil {
		return x.MaxInodes
	}
	return 0
}

func (x *Quota) GetUsedSpace() int64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *Quota) GetUsedInodes() int64 {
	if x != nil {
		return x.UsedInodes
	}
	return 0
}

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode      uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	DataLength int64  `protobuf:"varint,2,opt,name=dataLength,proto3" json:"dataLength,omitempty"`
	UsedSpace  int64  `protobuf:"varint,3,opt,name=usedSpace,proto3" json:"usedSpace,omitempty"`
	UsedInodes int64  `protobuf:"varint,4,opt,name=usedInodes,proto3" json:"usedInodes,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{8}
}

func (x *Stat) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Stat) GetDataLength() int64 {
	if x != nil {
		return x.DataLength
	}
	return 0
}

func (x *Stat) GetUsedSpace() int64 {
	if x != nil {
		return x.UsedSpace
	}
	return 0
}

func (x *Stat) GetUsedInodes() int64 {
	if x != nil {
		return x.UsedInodes
	}
	return 0
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // meta.Attr's binary format
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{9}
}

func (x *Node) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Node) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent uint64 `protobuf:"varint,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Inode  uint64 `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Name   []byte `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type   uint32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{10}
}

func (x *Edge) GetParent() uint64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *Edge) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Edge) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Edge) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// for redis and tikv only
type Parent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode  uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Parent uint64 `protobuf:"varint,2,opt,name=parent,proto3" json:"parent,omitempty"`
	Cnt    int64  `protobuf:"varint,3,opt,name=cnt,proto3" json:"cnt,omitempty"`
}

func (x *Parent) Reset() {
	*x = Parent{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Parent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parent) ProtoMessage() {}

func (x *Parent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parent.ProtoReflect.Descriptor instead.
func (*Parent) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{11}
}

func (x *Parent) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Parent) GetParent() uint64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *Parent) GetCnt() int64 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

type Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode  uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Index  uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Slices []byte `protobuf:"bytes,3,opt,name=slices,proto3" json:"slices,omitempty"` // array of meta.slice
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{12}
}

func (x *Chunk) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Chunk) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Chunk) GetSlices() []byte {
	if x != nil {
		return x.Slices
	}
	return nil
}

type Symlink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode  uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Target []byte `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *Symlink) Reset() {
	*x = Symlink{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Symlink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Symlink) ProtoMessage() {}

func (x *Symlink) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Symlink.ProtoReflect.Descriptor instead.
func (*Symlink) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{13}
}

func (x *Symlink) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *Symlink) GetTarget() []byte {
	if x != nil {
		return x.Target
	}
	return nil
}

type Batch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes     []*Node      `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges     []*Edge      `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	Chunks    []*Chunk     `protobuf:"bytes,3,rep,name=chunks,proto3" json:"chunks,omitempty"`
	SliceRefs []*SliceRef  `protobuf:"bytes,4,rep,name=sliceRefs,proto3" json:"sliceRefs,omitempty"`
	Xattrs    []*Xattr     `protobuf:"bytes,5,rep,name=xattrs,proto3" json:"xattrs,omitempty"`
	Parents   []*Parent    `protobuf:"bytes,6,rep,name=parents,proto3" json:"parents,omitempty"`
	Symlinks  []*Symlink   `protobuf:"bytes,7,rep,name=symlinks,proto3" json:"symlinks,omitempty"`
	Sustained []*Sustained `protobuf:"bytes,8,rep,name=sustained,proto3" json:"sustained,omitempty"`
	Delfiles  []*DelFile   `protobuf:"bytes,9,rep,name=delfiles,proto3" json:"delfiles,omitempty"`
	Dirstats  []*Stat      `protobuf:"bytes,10,rep,name=dirstats,proto3" json:"dirstats,omitempty"`
	Quotas    []*Quota     `protobuf:"bytes,11,rep,name=quotas,proto3" json:"quotas,omitempty"`
	Acls      []*Acl       `protobuf:"bytes,12,rep,name=acls,proto3" json:"acls,omitempty"`
	Counters  []*Counter   `protobuf:"bytes,13,rep,name=counters,proto3" json:"counters,omitempty"`
}

func (x *Batch) Reset() {
	*x = Batch{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Batch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Batch) ProtoMessage() {}

func (x *Batch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Batch.ProtoReflect.Descriptor instead.
func (*Batch) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{14}
}

func (x *Batch) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Batch) GetEdges() []*Edge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *Batch) GetChunks() []*Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *Batch) GetSliceRefs() []*SliceRef {
	if x != nil {
		return x.SliceRefs
	}
	return nil
}

func (x *Batch) GetXattrs() []*Xattr {
	if x != nil {
		return x.Xattrs
	}
	return nil
}

func (x *Batch) GetParents() []*Parent {
	if x != nil {
		return x.Parents
	}
	return nil
}

func (x *Batch) GetSymlinks() []*Symlink {
	if x != nil {
		return x.Symlinks
	}
	return nil
}

func (x *Batch) GetSustained() []*Sustained {
	if x != nil {
		return x.Sustained
	}
	return nil
}

func (x *Batch) GetDelfiles() []*DelFile {
	if x != nil {
		return x.Delfiles
	}
	return nil
}

func (x *Batch) GetDirstats() []*Stat {
	if x != nil {
		return x.Dirstats
	}
	return nil
}

func (x *Batch) GetQuotas() []*Quota {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *Batch) GetAcls() []*Acl {
	if x != nil {
		return x.Acls
	}
	return nil
}

func (x *Batch) GetCounters() []*Counter {
	if x != nil {
		return x.Counters
	}
	return nil
}

type Footer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Magic   uint32                     `protobuf:"varint,1,opt,name=magic,proto3" json:"magic,omitempty"`
	Version uint32                     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Infos   map[string]*Footer_SegInfo `protobuf:"bytes,3,rep,name=infos,proto3" json:"infos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Footer) Reset() {
	*x = Footer{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Footer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Footer) ProtoMessage() {}

func (x *Footer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Footer.ProtoReflect.Descriptor instead.
func (*Footer) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{15}
}

func (x *Footer) GetMagic() uint32 {
	if x != nil {
		return x.Magic
	}
	return 0
}

func (x *Footer) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Footer) GetInfos() map[string]*Footer_SegInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type Footer_SegInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset []uint64 `protobuf:"varint,1,rep,packed,name=offset,proto3" json:"offset,omitempty"`
	Num    uint64   `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *Footer_SegInfo) Reset() {
	*x = Footer_SegInfo{}
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Footer_SegInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Footer_SegInfo) ProtoMessage() {}

func (x *Footer_SegInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_meta_pb_backup_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Footer_SegInfo.ProtoReflect.Descriptor instead.
func (*Footer_SegInfo) Descriptor() ([]byte, []int) {
	return file_pkg_meta_pb_backup_proto_rawDescGZIP(), []int{15, 0}
}

func (x *Footer_SegInfo) GetOffset() []uint64 {
	if x != nil {
		return x.Offset
	}
	return nil
}

func (x *Footer_SegInfo) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

var File_pkg_meta_pb_backup_proto protoreflect.FileDescriptor

var file_pkg_meta_pb_backup_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x70, 0x62, 0x2f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0x1c,
	0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x07,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x35, 0x0a, 0x09, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4f, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x53, 0x6c, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x66, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x65, 0x66, 0x73, 0x22, 0x29, 0x0a, 0x03, 0x41,
	0x63, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x05, 0x58, 0x61, 0x74, 0x74, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x95, 0x01, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x61, 0x78, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x64, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x64, 0x49, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x4c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x48, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6e, 0x74, 0x22, 0x4b, 0x0a,
	0x05, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x07, 0x53, 0x79,
	0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0xed, 0x03, 0x0a, 0x05, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1e, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x06, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x73,
	0x12, 0x2a, 0x0a, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x09, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x73, 0x12, 0x21, 0x0a, 0x06,
	0x78, 0x61, 0x74, 0x74, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x58, 0x61, 0x74, 0x74, 0x72, 0x52, 0x06, 0x78, 0x61, 0x74, 0x74, 0x72, 0x73, 0x12,
	0x24, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6d,
	0x6c, 0x69, 0x6e, 0x6b, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2b,
	0x0a, 0x09, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64,
	0x52, 0x09, 0x73, 0x75, 0x73, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x64,
	0x65, 0x6c, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x08, 0x64, 0x69, 0x72, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x52, 0x08, 0x64, 0x69, 0x72, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x1b, 0x0a,
	0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x63, 0x6c, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x12, 0x27, 0x0a, 0x08, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x22, 0xe8, 0x01, 0x0a, 0x06, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6d,
	0x61, 0x67, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x33, 0x0a, 0x07, 0x53,
	0x65, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x1a, 0x4c, 0x0a, 0x0a, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_meta_pb_backup_proto_rawDescOnce sync.Once
	file_pkg_meta_pb_backup_proto_rawDescData = file_pkg_meta_pb_backup_proto_rawDesc
)

func file_pkg_meta_pb_backup_proto_rawDescGZIP() []byte {
	file_pkg_meta_pb_backup_proto_rawDescOnce.Do(func() {
		file_pkg_meta_pb_backup_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_meta_pb_backup_proto_rawDescData)
	})
	return file_pkg_meta_pb_backup_proto_rawDescData
}

var file_pkg_meta_pb_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_meta_pb_backup_proto_goTypes = []any{
	(*Format)(nil),         // 0: pb.Format
	(*Counter)(nil),        // 1: pb.Counter
	(*Sustained)(nil),      // 2: pb.Sustained
	(*DelFile)(nil),        // 3: pb.DelFile
	(*SliceRef)(nil),       // 4: pb.SliceRef
	(*Acl)(nil),            // 5: pb.Acl
	(*Xattr)(nil),          // 6: pb.Xattr
	(*Quota)(nil),          // 7: pb.Quota
	(*Stat)(nil),           // 8: pb.Stat
	(*Node)(nil),           // 9: pb.Node
	(*Edge)(nil),           // 10: pb.Edge
	(*Parent)(nil),         // 11: pb.Parent
	(*Chunk)(nil),          // 12: pb.Chunk
	(*Symlink)(nil),        // 13: pb.Symlink
	(*Batch)(nil),          // 14: pb.Batch
	(*Footer)(nil),         // 15: pb.Footer
	(*Footer_SegInfo)(nil), // 16: pb.Footer.SegInfo
	nil,                    // 17: pb.Footer.InfosEntry
}
var file_pkg_meta_pb_backup_proto_depIdxs = []int32{
	9,  // 0: pb.Batch.nodes:type_name -> pb.Node
	10, // 1: pb.Batch.edges:type_name -> pb.Edge
	12, // 2: pb.Batch.chunks:type_name -> pb.Chunk
	4,  // 3: pb.Batch.sliceRefs:type_name -> pb.SliceRef
	6,  // 4: pb.Batch.xattrs:type_name -> pb.Xattr
	11, // 5: pb.Batch.parents:type_name -> pb.Parent
	13, // 6: pb.Batch.symlinks:type_name -> pb.Symlink
	2,  // 7: pb.Batch.sustained:type_name -> pb.Sustained
	3,  // 8: pb.Batch.delfiles:type_name -> pb.DelFile
	8,  // 9: pb.Batch.dirstats:type_name -> pb.Stat
	7,  // 10: pb.Batch.quotas:type_name -> pb.Quota
	5,  // 11: pb.Batch.acls:type_name -> pb.Acl
	1,  // 12: pb.Batch.counters:type_name -> pb.Counter
	17, // 13: pb.Footer.infos:type_name -> pb.Footer.InfosEntry
	16, // 14: pb.Footer.InfosEntry.value:type_name -> pb.Footer.SegInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_pkg_meta_pb_backup_proto_init() }
func file_pkg_meta_pb_backup_proto_init() {
	if File_pkg_meta_pb_backup_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_meta_pb_backup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_meta_pb_backup_proto_goTypes,
		DependencyIndexes: file_pkg_meta_pb_backup_proto_depIdxs,
		MessageInfos:      file_pkg_meta_pb_backup_proto_msgTypes,
	}.Build()
	File_pkg_meta_pb_backup_proto = out.File
	file_pkg_meta_pb_backup_proto_rawDesc = nil
	file_pkg_meta_pb_backup_proto_goTypes = nil
	file_pkg_meta_pb_backup_proto_depIdxs = nil
}
