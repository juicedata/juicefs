name: 'JuiceFS Filebench Action'
description: 'JuiceFS Filebench Action'
inputs:
  workload:
    description: 'type of the workload'
    required: true
    default: 'none'

runs:
  using: "composite"
  steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.18.x'

    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@master

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go
        restore-keys: |
          ${{ runner.os }}-go

    - name: Build linux target
      shell: bash
      run: make juicefs

    - name: Run Redis
      shell: bash
      run: |
        sudo docker run -d --name redis -v redis-data:/data  \
        -p 6379:6379  redis redis-server --appendonly yes


    - name: Setup minio
      shell: bash
      run: |
        docker run -d -p 9000:9000 --name minio \
                  -e "MINIO_ACCESS_KEY=minioadmin" \
                  -e "MINIO_SECRET_KEY=minioadmin" \
                  -v /tmp/data:/data \
                  -v /tmp/config:/root/.minio \
                  minio/minio server /data
        sleep 5

    - name: Juicefs Format
      shell: bash
      run: |
        pwd
        echo "hello"
        ls
        sudo ./juicefs format --trash-days 0  --storage minio --bucket http://127.0.0.1:9000/mypics \
           --access-key minioadmin \
           --secret-key minioadmin \
           redis://127.0.0.1:6379/1 pics

    - name: Juicefs Mount
      shell: bash
      run: |
        sudo ./juicefs mount -d redis://127.0.0.1:6379/1 /data/jfs --no-usage-report &


    - name: Install Dependency
      shell: bash
      run: |
        wget -O filebench.tar.gz https://github.com/filebench/filebench/releases/download/1.5-alpha3/filebench-1.5-alpha3.tar.gz
        tar -zxvf filebench.tar.gz
        cd filebench-1.5-alpha3
        #sudo apt install -y bison
        #sudo apt install -y byacc
        #sudo apt install -y flex
        ./configure
        make
        sudo make install
        filebench -h
        echo 0 >randomize_va_space
        sudo cp randomize_va_space /proc/sys/kernel/
        echo "randomize_va_space"
        cat /proc/sys/kernel/randomize_va_space


    - name: Run Workload
      shell: bash
      run: |
        cd /usr/local/share/filebench/workloads/
        sudo chmod 777 *
        if [ ${{inputs.workload}} == "varmail" ];then
          echo "run varmail workload"
          sudo sed -i "s?/tmp?/data/jfs?" varmail.f
          sudo sed -i "s?run 60?run 1800?" varmail.f
          cat varmail.f
          sudo filebench -f varmail.f
        elif [ ${{inputs.workload}} == "webserver" ];then
          echo "run webserver workload"
          sudo sed -i "s?/tmp?/data/jfs?" webserver.f
          sudo sed -i "s?run 60?run 1800?" webserver.f
          cat webserver.f
          sudo filebench -f webserver.f
        elif [ ${{inputs.workload}} == "videoserver" ];then
          echo "run videoserver worload"
          sudo sed -i "s?/tmp?/data/jfs?" videoserver.f
          sudo sed -i "s?$filesize=10g?$filesize=100m?" videoserver.f
          sudo sed -i "s?$numpassivevids=194?$numpassivevids=100?" videoserver.f
          sudo echo "run 1800" >>videoserver.f
          cat videoserver.f
          sudo filebench -f videoserver.f
        fi

    - name: Log
      shell: bash
      if: ${{ always() }}
      run: |
        df -lh
        echo "juicefs log"
        sudo tail -n 1000 /var/log/juicefs.log
        grep "<FATAL>:" /var/log/juicefs.log && exit 1 || true