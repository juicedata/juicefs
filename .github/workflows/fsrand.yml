name: "fsrand"
on:
  schedule:
    - cron:  '0 18 * * *'
  workflow_dispatch:

jobs:
  fsrand:
    strategy:
      fail-fast: false
      matrix:
        # meta: [ 'sqlite3', 'redis', 'mysql', 'tikv', 'tidb', 'postgres', 'mariadb', 'badger', 'fdb']
        meta: ['redis']
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set Variable
        id: vars
        run: |
          if [ "${{matrix.meta}}" == "fdb" ]; then
            echo ::set-output name=target::"juicefs.fdb"
          else
            echo ::set-output name=target::"juicefs"
          fi

      - name: Build
        uses: ./.github/actions/build
        with: 
          target: ${{steps.vars.outputs.target}}

      - uses: actions/cache@v3
        if: ${{ matrix.meta == 'tikv' || matrix.meta == 'tidb' }}
        with:
          path: ~/.tiup
          key: ${{ runner.os }}-tiup
          restore-keys: |
            ${{ runner.os }}-tiup

      - name: Prepare meta db
        run: | 
          chmod +x .github/scripts/start_meta_engine.sh
          source .github/scripts/start_meta_engine.sh
          start_meta_engine ${{matrix.meta}}
          meta_url=$(get_meta_url ${{matrix.meta}})
          create_database $meta_url

      - name: Juicefs Format
        run: |
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          sudo ./juicefs format $meta_url --trash-days 0 pics

      - name: Juicefs Mount
        run: |
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          # sudo mkdir /var/jfs
          # sudo chmod 777 /var/jfs
          sudo ./juicefs mount -d $meta_url /jfs --no-usage-report &
          sleep 5
          if [ ! -f /jfs/.accesslog ]; then
            echo "<FATAL>: mount failed"
            exit 1
          fi

      - name: Test with fsrand
        run: |
          chmod +x .github/scripts/fsrand.py
          chmod +x .github/scripts/cmptree.py
          count=50000
          ts=$(date +%s)
          mkdir /tmp/fsrand
          mkdir /jfs/fsrand
          declare -a pids   
          python3 .github/scripts/fsrand.py  -c $count -v -s $ts /tmp/fsrand &
          pids+=($!)
          python3 .github/scripts/fsrand.py  -c $count -v -s $ts /jfs/fsrand &
          pids+=($!)
          wait "${pids[@]}"
          python3 .github/scripts/cmptree.py /tmp/fsrand /jfs/fsrand

      - name: log
        if: ${{ always() }}
        shell: bash
        run: | 
          if [ -f ~/.juicefs/juicefs.log ]; then
            tail -300 ~/.juicefs/juicefs.log
            grep "<FATAL>:" ~/.juicefs/juicefs.log && exit 1 || true
          fi
          if [ -f /var/log/juicefs.log ]; then
            tail -300 /var/log/juicefs.log
            grep "<FATAL>:" /var/log/juicefs.log && exit 1 || true
          fi

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  
          
      - name: Setup upterm session
        if: ${{ failure() }}
        timeout-minutes: 60
        uses: lhotari/action-upterm@v1