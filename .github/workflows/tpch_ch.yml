name: "tpchch"

on:
  push:
    branches:
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  pull_request:
    #The branches below must be a subset of the branches above
    branches:
      - 'main'
    paths-ignore:
      - 'docs/**'
  schedule:
    - cron:  '30 20 * * *'

  workflow_dispatch:

jobs:
  tpchch:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.x'

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build linux target
        run: make juicefs

      - name: Run Redis
        run: |
          sudo docker run -d --name redis -v redis-data:/data  \
          -p 6379:6379  redis redis-server --appendonly yes

      - name: Juicefs Format
        run: |
          sudo ./juicefs format redis://127.0.0.1:6379/1 pics

      - name: Juicefs Mount
        run: |
          sudo ./juicefs mount -d redis://127.0.0.1:6379/1 /data/jfs --no-usage-report &

      - name: Install ClickHouse
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates dirmngr
          echo "deb https://packages.clickhouse.com/deb stable main" | sudo tee /etc/apt/sources.list.d/clickhouse.list
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 8919F6BD2B48D754
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive  apt-get install -y  clickhouse-server clickhouse-client


      - name: Change Datadir
        run: |
          sudo chmod 777 /etc/clickhouse-server/
          sudo chmod 777 /etc/clickhouse-server/config.xml
          #sudo cp /etc/clickhouse-server/config.xml /tmp/
          #echo "11111"
          #cat /tmp/config.xml
          #echo "22222"
          sudo sed -i "s?<path>/var/lib/clickhouse/</path>?<path>/data/jfs/</path>?" /etc/clickhouse-server/config.xml
          sudo cat /etc/clickhouse-server/config.xml
          sudo chmod 777 /var/lib/clickhouse/
          #sudo cp -r /var/lib/clickhouse/* /data/jfs/
          #sudo chmod -R /data/jfs/*
          ls -lah /data/jfs/
          sudo service clickhouse-server start
          sudo service clickhouse-server status
          ls -lah /data/jfs/


      - name: Gernerate Data
        run: |
          cd /data/jfs/
          git clone https://github.com/vadimtk/ssb-dbgen.git
          cd ssb-dbgen
          make
          echo "33333"
          echo "111"
          ./dbgen -s 10 -T c -q
          echo "222"
          ./dbgen -s 10 -T l -q
          echo "333"
          ls -lrth
          ./dbgen -s 10 -T p -q
          echo "444"
          ls -lrth
          ./dbgen -s 10 -T s -q
          echo "555"
          ./dbgen -s 10 -T d -q
          ls -lrth
          pwd


      - name: Create Table
        run: |
          clickhouse-client --query "CREATE TABLE customer
                                     (
                                             C_CUSTKEY       UInt32,
                                             C_NAME          String,
                                             C_ADDRESS       String,
                                             C_CITY          LowCardinality(String),
                                             C_NATION        LowCardinality(String),
                                             C_REGION        LowCardinality(String),
                                             C_PHONE         String,
                                             C_MKTSEGMENT    LowCardinality(String)
                                     )
                                     ENGINE = MergeTree ORDER BY (C_CUSTKEY);"
          clickhouse-client --query "CREATE TABLE lineorder
                                     (
                                         LO_ORDERKEY             UInt32,
                                         LO_LINENUMBER           UInt8,
                                         LO_CUSTKEY              UInt32,
                                         LO_PARTKEY              UInt32,
                                         LO_SUPPKEY              UInt32,
                                         LO_ORDERDATE            Date,
                                         LO_ORDERPRIORITY        LowCardinality(String),
                                         LO_SHIPPRIORITY         UInt8,
                                         LO_QUANTITY             UInt8,
                                         LO_EXTENDEDPRICE        UInt32,
                                         LO_ORDTOTALPRICE        UInt32,
                                         LO_DISCOUNT             UInt8,
                                         LO_REVENUE              UInt32,
                                         LO_SUPPLYCOST           UInt32,
                                         LO_TAX                  UInt8,
                                         LO_COMMITDATE           Date,
                                         LO_SHIPMODE             LowCardinality(String)
                                     )
                                     ENGINE = MergeTree PARTITION BY toYear(LO_ORDERDATE) ORDER BY (LO_ORDERDATE, LO_ORDERKEY);"
          clickhouse-client --query "CREATE TABLE part
                                     (
                                             P_PARTKEY       UInt32,
                                             P_NAME          String,
                                             P_MFGR          LowCardinality(String),
                                             P_CATEGORY      LowCardinality(String),
                                             P_BRAND         LowCardinality(String),
                                             P_COLOR         LowCardinality(String),
                                             P_TYPE          LowCardinality(String),
                                             P_SIZE          UInt8,
                                             P_CONTAINER     LowCardinality(String)
                                     )
                                     ENGINE = MergeTree ORDER BY P_PARTKEY;"
          clickhouse-client --query "CREATE TABLE supplier
                                     (
                                             S_SUPPKEY       UInt32,
                                             S_NAME          String,
                                             S_ADDRESS       String,
                                             S_CITY          LowCardinality(String),
                                             S_NATION        LowCardinality(String),
                                             S_REGION        LowCardinality(String),
                                             S_PHONE         String
                                     )
                                     ENGINE = MergeTree ORDER BY S_SUPPKEY;"


      - name: Import Data
        run: |
          cd /data/jfs/ssb-dbgen/
          clickhouse-client --query "INSERT INTO customer FORMAT CSV" < customer.tbl
          clickhouse-client --query "INSERT INTO part FORMAT CSV" < part.tbl
          clickhouse-client --query "INSERT INTO supplier FORMAT CSV" < supplier.tbl
          clickhouse-client --query "INSERT INTO lineorder FORMAT CSV" < lineorder.tbl
          ls -lah /data/jfs/
          sudo du -sh /data/jfs/


      - name: ClickHouse Test
        run: |
          echo "hello"


      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  

      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1