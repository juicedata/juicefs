name: "fio-benchmark"

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:

jobs:
  fio-benchmark:
    runs-on: [self-hosted, daily-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set Variable
        id: vars
        run: |
          echo ::set-output name=META_URL::redis://mymaster,172.27.0.1,172.27.0.2,172.27.0.3:26379/5
          echo ::set-output name=MINIO_URL::http://172.27.0.2:9005/juicefs-fio-benchmark
          echo ::set-output name=MOUNT_POINT::/tmp/juicefs-fio-benchmark

      - name: Build linux target
        run: |
          export GOPATH=/usr/local/go
          export HOME=/root
          make juicefs

      - name: Clean Before
        run: |
          if [ -d ${{ steps.vars.outputs.MOUNT_POINT }} ]; then
            ./juicefs umount ${{ steps.vars.outputs.MOUNT_POINT }} || true
          fi
          UUID=$(./juicefs status ${{ steps.vars.outputs.META_URL }} | grep UUID | cut -d '"' -f 4)
          if [ -n "$UUID" ];then
            sudo ./juicefs destroy --force ${{ steps.vars.outputs.META_URL }} $UUID
          fi

      - name: Juicefs Format
        run: |
          sudo ./juicefs format --storage minio --bucket  ${{ steps.vars.outputs.MINIO_URL }} --access-key minioadmin --secret-key ${{ secrets.MINIO_SECRET_KEY }}  ${{ steps.vars.outputs.META_URL }} fio-benchmark

      - name: Juicefs Mount
        run: |
          sudo ./juicefs mount -d ${{ steps.vars.outputs.META_URL }} ${{ steps.vars.outputs.MOUNT_POINT }} --no-usage-report &

      - name: Fio Benchmark 
        run: |
          fio --name=sequential-read --directory=${{ steps.vars.outputs.MOUNT_POINT }} --rw=read --refill_buffers --bs=4M --size=1G

      - name: Clean After
        run: |
          if [ -d ${{ steps.vars.outputs.MOUNT_POINT }} ]; then
            ./juicefs umount ${{ steps.vars.outputs.MOUNT_POINT }} || true
          fi
          UUID=$(./juicefs status ${{ steps.vars.outputs.META_URL }} | grep UUID | cut -d '"' -f 4)
          if [ -n "$UUID" ];then
            sudo ./juicefs destroy --force ${{ steps.vars.outputs.META_URL }} $UUID
          fi

      - name: Send Slack Notification
        if: ${{ failure() }}
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack-message: "@${{ github.actor}} CI Check ${{ job.status }} on ${{ github.event_name }}\n${{ github.event.pull_request.title || github.event.head_commit.message }} \nhttps://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}  