name: "load-test"
on:
  schedule:
    - cron:  '0 16 * * *'
  workflow_dispatch:

jobs:
  load:
    strategy:
      fail-fast: false
      matrix:
        meta: [ 'tidb', 'sqlite3', 'redis', 'mysql', 'tikv', 'postgres', 'badgerdb', 'mariadb']
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go
          restore-keys: |
            ${{ runner.os }}-go

      - name: Build linux target
        run: |
          make juicefs 
        shell: bash

      - name: Prepare meta db
        run: | 
          sudo chmod +x .github/scripts/start_meta_engine.sh
          source .github/scripts/start_meta_engine.sh
          start_meta_engine ${{matrix.meta}}

      - name: Test
        run: |
          sudo chmod +x .github/scripts/start_meta_engine.sh
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          create_database $meta_url
          echo meta_url is: $meta_url
          mount_point=/tmp/juicefs-load-test
          wget -q https://s.juicefs.com/static/bench/2M_emtpy_files.dump.gz
          gzip -dk  2M_emtpy_files.dump.gz
          load_file=2M_emtpy_files.dump
          echo `date`, start load
          sudo ./juicefs load $meta_url $load_file
          echo `date`, finish load
          echo `date`, start dump
          sudo ./juicefs dump $meta_url dump.json
          echo `date`, finish dump
          sudo ./juicefs mount $meta_url $mount_point -d

      - name: log
        if: ${{ always() }}
        shell: bash
        run: | 
          tail -300 /var/log/juicefs.log
          grep "<FATAL>:" /var/log/juicefs.log && exit 1 || true

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  
          
      - name: Setup upterm session
        if: ${{ failure() }}
        timeout-minutes: 1
        uses: lhotari/action-upterm@v1