name: "rm-test"

on:
  push:
    branches:
      - 'main'
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  pull_request:
    #The branches below must be a subset of the branches above
    branches:
      - 'main'
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  schedule:
    - cron:  '0 3 * * *'
  workflow_dispatch:

jobs:
  pg-rm:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Init
        run: |
          sudo chmod 777 /var
          git clone https://github.com/sanwan/actionfile.git
          cd actionfile
          cat META_8M_EMPTY_FILE.json.gz* >META_8M_EMPTY_FILE.json.gz
          gzip -dk  META_8M_EMPTY_FILE.json.gz
          ls -lh
          mv META_8M_EMPTY_FILE.json ../
          cd ../
          ls -lh
      - name: Load
        uses: ./.github/actions/load
        with:
          meta_url: "postgres://postgres:postgres@127.0.0.1:5432/sync_test?sslmode=disable"
          load_file: "META_8M_EMPTY_FILE.json"
      - name: Rm 100w Files in Depth of 1 Directory
        run: |
            cd /tmp/juicefs-sync-test/mkdir/
            echo "rm 100w files in depth of 1 directory"
            rm -rf aaa/
      - name: Rm 100w Files in Depth of 100 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 100 directory"
          rm -rf aaa0/
      - name: Rm 100w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 200 directory"
          rm -rf aaa1/
      - name: Rm 500w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 500w files in depth of 200 directory"
          rm -rf aaa2/
      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1


  mysql-rm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Init
        run: |
          sudo chmod 777 /var
          sudo /etc/init.d/mysql start
          git clone https://github.com/sanwan/actionfile.git
          cd actionfile
          cat META_8M_EMPTY_FILE.json.gz* >META_8M_EMPTY_FILE.json.gz
          gzip -dk  META_8M_EMPTY_FILE.json.gz
          ls -lh
          mv META_8M_EMPTY_FILE.json ../
          cd ../
          ls -lh
      - name: Load
        uses: ./.github/actions/load
        with:
          meta_url: "mysql://root:root@\\(127.0.0.1\\)/sync_test"
          load_file: "META_8M_EMPTY_FILE.json"
      - name: Rm 100w Files in Depth of 1 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 1 directory"
          rm -rf aaa/
      - name: Rm 100w Files in Depth of 100 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 100 directory"
          rm -rf aaa0/
      - name: Rm 100w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 200 directory"
          rm -rf aaa1/
      - name: Rm 500w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 500w files in depth of 200 directory"
          rm -rf aaa2/
      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1

  redis-rm:
    runs-on: ubuntu-latest
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Init
        run: |
          sudo chmod 777 /var
          git clone https://github.com/sanwan/actionfile.git
          cd actionfile
          cat META_8M_EMPTY_FILE.json.gz* >META_8M_EMPTY_FILE.json.gz
          gzip -dk  META_8M_EMPTY_FILE.json.gz
          ls -lh
          mv META_8M_EMPTY_FILE.json ../
          cd ../
          ls -lh
      - name: Load
        uses: ./.github/actions/load
        with:
          meta_url: redis://127.0.0.1:6379/1
          load_file: "META_8M_EMPTY_FILE.json"
      - name: Rm 100w Files in Depth of 1 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 1 directory"
          rm -rf aaa/
      - name: Rm 100w Files in Depth of 100 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 100 directory"
          rm -rf aaa0/
      - name: Rm 100w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 200 directory"
          rm -rf aaa1/
      - name: Rm 500w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 500w files in depth of 200 directory"
          rm -rf aaa2/
      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1


  sqlite3-rm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Init
        run: |
          sudo chmod 777 /var
          git clone https://github.com/sanwan/actionfile.git
          cd actionfile
          cat META_8M_EMPTY_FILE.json.gz* >META_8M_EMPTY_FILE.json.gz
          gzip -dk  META_8M_EMPTY_FILE.json.gz
          ls -lh
          mv META_8M_EMPTY_FILE.json ../
          cd ../
          ls -lh
      - name: Load
        uses: ./.github/actions/load
        with:
          meta_url: sqlite3://sync-test.db
          load_file: "META_8M_EMPTY_FILE.json"
      - name: Rm 100w Files in Depth of 1 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 1 directory"
          rm -rf aaa/
      - name: Rm 100w Files in Depth of 100 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 100 directory"
          rm -rf aaa0/
      - name: Rm 100w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 100w files in depth of 200 directory"
          rm -rf aaa1/
      - name: Rm 500w Files in Depth of 200 Directory
        run: |
          cd /tmp/juicefs-sync-test/mkdir/
          echo "rm 500w files in depth of 200 directory"
          rm -rf aaa2/
      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1