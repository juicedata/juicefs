name: "unittests"

on:
  push:
    branches:
      - 'release-*'
    paths-ignore:
      - 'docs/**'
      - '**.md'
  pull_request:
    #The branches below must be a subset of the branches above
    branches:
      - 'main'
      - 'release-*'
    paths-ignore:
      - 'docs/**'
      - '**.md'
  workflow_dispatch:

jobs:
  unittests:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build linux target
        run: |
          make juicefs


      - name: Run Redis
        run: |
          sudo docker run -d --name redis -v redis-data:/data  \
          -p 6379:6379  redis redis-server --appendonly yes

      - name: Juicefs Format
        run: |
          sudo ./juicefs format  redis://127.0.0.1:6379/1 pics

      - name: Juicefs Mount
        run: |
          sudo ./juicefs mount -d redis://127.0.0.1:6379/1 /jfs/ --enable-xattr --no-usage-report &


      - name: Prepare Database
        run: |
          sudo service mysql start
          sudo service postgresql start
          sudo mysql -uroot -proot -e "create database dev;"
          psql -c 'create database test;' -U postgres
          pwd
          echo "hello"
          wget -O install.sh https://tiup-mirrors.pingcap.com/install.sh
          wget -O rclone-v1.57.0-linux-amd64.zip --no-check-certificate https://downloads.rclone.org/v1.57.0/rclone-v1.57.0-linux-amd64.zip
          unzip rclone-v1.57.0-linux-amd64.zip -d .
          wget -O litmus-0.13.tar.gz http://www.webdav.org/neon/litmus/litmus-0.13.tar.gz && tar -zxvf litmus-0.13.tar.gz -C .
          cd litmus-0.13 && ./configure && make && cd -
          pwd
          wget -O etcd-v3.5.2-linux-amd64.tar.gz  https://github.com/etcd-io/etcd/releases/download/v3.5.2/etcd-v3.5.2-linux-amd64.tar.gz
          tar -zxf etcd-v3.5.2-linux-amd64.tar.gz -C .
          sh install.sh && source ~/.bash_profile && nohup tiup playground --mode tikv-slim >> output.log 2>&1 &


      - name: log
        if: ${{ always() }}
        run: | 
          tail -300 /var/log/juicefs.log
          grep "<FATAL>:" /var/log/juicefs.log && exit 1 || true

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"

      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1