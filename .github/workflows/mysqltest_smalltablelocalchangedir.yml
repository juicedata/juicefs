name: "mysqltestchangedir"

on:
#  push:
#    branches:
#      - 'release-**'
#    paths-ignore:
#      - 'docs/**'
#  pull_request:
#    #The branches below must be a subset of the branches above
#    branches:
#      - 'release-**'
#    paths-ignore:
#      - 'docs/**'
  schedule:
    - cron:  '30 20 * * *'
  workflow_dispatch:

jobs:
  mysqltestsmalltablechangedir:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Set up Docker
        uses: docker-practice/actions-setup-docker@master

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Change Data Dir
        run: |
          sudo service mysql stop
          sudo sed  -i "s?.*datadir.*?datadir=/tmp/jfs/mysql?" /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo cat /etc/mysql/mysql.conf.d/mysqld.cnf
          sudo mkdir -p /tmp/jfs/mysql
          sudo chmod 777 /var/lib/mysql/
          sudo cp -a -r /var/lib/mysql/* /tmp/jfs/mysql/
          sudo chmod 777 /tmp/jfs/mysql/
          sudo chown -R mysql:mysql /tmp/jfs/mysql/
          sudo chmod 777 /etc/apparmor.d/tunables/alias
          sudo echo "alias /var/lib/mysql/ -> /tmp/jfs/mysql/," >>/etc/apparmor.d/tunables/alias
          sudo service apparmor restart
          sudo service mysql start
          sudo service mysql status
          sudo mysql -uroot -proot  -e "select @@datadir;"

      - name: Install Sysbench
        run: |
          curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh | sudo bash
          sudo apt -y install sysbench
          sudo mysql -uroot -proot -e "create database test;"
          echo "mysql-host=127.0.0.1" >>/tmp/config.cfg
          echo "mysql-port=3306" >>/tmp/config.cfg
          echo "mysql-user=root" >>/tmp/config.cfg
          echo "mysql-password=root" >>/tmp/config.cfg
          echo "mysql-db=test" >>/tmp/config.cfg
          echo "threads=64" >>/tmp/config.cfg
          echo "report-interval=10" >>/tmp/config.cfg
          echo "db-driver=mysql" >>/tmp/config.cfg

      - name: Small Size Table Test
        run: |
          sudo mysql -uroot -proot  -e "use mysql;set global max_prepared_stmt_count = 100000;"
          sudo sysbench --config-file=/tmp/config.cfg oltp_point_select --tables=64 --table-size=100000 prepare
          sudo sysbench --config-file=/tmp/config.cfg oltp_read_only --tables=64 --time=300 --table-size=100000 run
          sudo sysbench --config-file=/tmp/config.cfg oltp_write_only --tables=64 --time=300 --table-size=100000 run
          sudo sysbench --config-file=/tmp/config.cfg oltp_read_write --tables=64 --time=600 --table-size=100000 run
          sudo sysbench --config-file=/tmp/config.cfg oltp_point_select --tables=64 --table-size=100000 cleanup

      - name: Log
        if: ${{ always() }}
        run: |
          echo "mysql log"
          tail -n 1000 /var/log/mysql/error.log

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  
          
      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1