name: "sysbench"

on:
  schedule:
    - cron:  '30 20 * * *'
  workflow_dispatch:

jobs:
  sysbench:
    strategy:
      fail-fast: false
      matrix:
        # meta: [ 'sqlite3', 'redis', 'mysql', 'tikv', 'tidb', 'postgres', 'mariadb', 'badger', 'fdb']
        meta: ['redis']
        compress: [ 'none', 'lz4', 'zstd']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set Variable
        id: vars
        run: |
          if [ "${{matrix.meta}}" == "fdb" ]; then
            echo ::set-output name=target::"juicefs.fdb"
          else
            echo ::set-output name=target::"juicefs"
          fi

      - name: Build
        uses: ./.github/actions/build
        with: 
          target: ${{steps.vars.outputs.target}}

      - name: Prepare meta db
        run: | 
          chmod +x .github/scripts/start_meta_engine.sh
          source .github/scripts/start_meta_engine.sh
          start_meta_engine ${{matrix.meta}}

      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 --name minio \
                    -e "MINIO_ACCESS_KEY=minioadmin" \
                    -e "MINIO_SECRET_KEY=minioadmin" \
                    -v /tmp/data:/data \
                    -v /tmp/config:/root/.minio \
                    minio/minio server /data
          sleep 5

      - name: Juicefs Format
        run: |
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          sudo ./juicefs format --trash-days 0 --compress ${{matrix.compress}} --storage minio --bucket http://127.0.0.1:9000/mypics \
            --access-key minioadmin \
            --secret-key minioadmin \
            $meta_url pics

      - name: Juicefs Mount
        run: |
          source .github/scripts/start_meta_engine.sh
          meta_url=$(get_meta_url ${{matrix.meta}})
          sudo ./juicefs mount -d $meta_url /jfs --no-usage-report &

      - name: Install Sysbench
        run: |
          curl -s https://packagecloud.io/install/repositories/akopytov/sysbench/script.deb.sh | sudo bash
          sudo apt -y install sysbench

      - name: Smallfile Test Read 1M
        run: |
          date +%Y_%m_%d_%H_%M_%S > /tmp/datetime
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sudo stat /jfs
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqrd --time=600  prepare
          fileName=result_seqrd_1M_4000_$DATE_TIME
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqrd --time=600  run >"$fileName"
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqrd --time=600  cleanup
          curl -w '%{http_code}' -F file=@$fileName https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}


      - name: Smallfile Test Write 1M
        run: |
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqwr --time=600  prepare
          fileName=result_seqwr_1M_4000_$DATE_TIME
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqwr --time=600  run >"$fileName"
          sysbench fileio --file-num=4000  --file-total-size=4G --file-test-mode=seqwr --time=600  cleanup
          curl -w '%{http_code}' -F file=@$fileName https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}


      - name: Smallfile Test Read 100K
        run: |
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqrd --time=600  prepare
          fileName=result_seqrd_100K_40000_$DATE_TIME
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqrd --time=600  run >"$fileName"
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqrd --time=600  cleanup
          curl -w '%{http_code}' -F file=@$fileName https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}


      - name: Smallfile Test Write 100K
        run: |
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqwr --time=600  prepare
          fileName=result_seqwr_100K_40000_$DATE_TIME
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqwr --time=600  run >"$fileName"
          sysbench fileio --file-num=40000  --file-total-size=4G --file-test-mode=seqwr --time=600  cleanup
          curl -w '%{http_code}' -F file=@$fileName https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}

      - name: Smallfile Test 1M
        run: |
          date +%Y_%m_%d_%H_%M_%S > /tmp/datetime
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sudo stat /jfs
          sysbench fileio --file-num=6000  --file-total-size=6G --file-test-mode=rndrw --time=600  prepare
          fileName=result_rndrw_1M_6000_$DATE_TIME
          sysbench fileio --file-num=6000  --file-total-size=6G --file-test-mode=rndrw --time=600  run >"$fileName"
          sysbench fileio --file-num=6000  --file-total-size=6G --file-test-mode=rndrw --time=600  cleanup
          cat $fileName
          curl -w '%{http_code}' -F file=@"$fileName" https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}


      - name: Smallfile Test 100K
        run: |
          DATE_TIME=$(cat /tmp/datetime)
          cd /jfs
          sysbench fileio --file-num=60000  --file-total-size=6G --file-test-mode=rndrw --time=600  prepare
          fileName=result_rndrw_100K_60000_$DATE_TIME
          sysbench fileio --file-num=60000  --file-total-size=6G --file-test-mode=rndrw --time=600  run >"$fileName"
          sysbench fileio --file-num=60000  --file-total-size=6G --file-test-mode=rndrw --time=600  cleanup
          cat $fileName
          curl -w '%{http_code}' -F file=@"$fileName" https://juicefs.com/upload-file-u80sdvuke/$fileName?token=${{secrets.FILE_UPLOAD_AUTH_TOKEN}}


      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"

