name: "gc-test"

on:
  push:
    branches:
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  pull_request:
    #The branches below must be a subset of the branches above
    branches:
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:
  
jobs:
  gc-test:
    runs-on: ubuntu-latest
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:        
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.18.x'

      - name: Build linux target
        run: make juicefs

      - name: Install Tools
        run: | 
          sudo apt-get update
          sudo apt install redis-tools
          sudo apt install fio
          
      - name: Test delay delete slice after compaction
        run: |
          meta=redis://localhost/1
          mp=myjfs/
          name=myjfs
          juicefs=./juicefs
          $juicefs format $meta $name --trash-days 1
          $juicefs mount -d $meta $mp
          fio --name=abc --rw=randwrite --refill_buffers --size=2G --bs=256k --directory=$mp
          redis-cli save
          # don't skip files when gc compact
          export JFS_SKIPPED_TIME=1
          $juicefs gc --compact --delete $meta
          container_id=$(docker ps -a | grep redis | awk '{print $1}')
          sudo killall -9 redis-server
          sudo docker restart $container_id
          sleep 3
          $juicefs fsck $meta

      - name: log
        if: ${{ always() }}
        run: | 
          tail -300 ~/.juicefs/juicefs.log
          grep "<FATAL>:" ~/.juicefs/juicefs.log && exit 1 || true

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"          

      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1
