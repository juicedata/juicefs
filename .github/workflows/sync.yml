name: "sync-test"

on:
  push:
    branches:
      - 'main'
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  pull_request:
    #The branches below must be a subset of the branches above
    branches:
      - 'main'
      - 'release-**'
    paths-ignore:
      - 'docs/**'
  workflow_dispatch:

jobs:
  sync-test:
    runs-on: ubuntu-latest
    services:
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.x'

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Build linux target
        run: make juicefs

      - name: Checkout source code for sync test
        uses: actions/checkout@v2
        with:
          repository: juicedata/juicefs
          path: juicefs-source

      - name: Checkout source code for test
        uses: actions/checkout@v2
        with:
          repository: juicedata/juicefs
          path: source-dir

      - name: Test Sync
        run: |
          sudo chmod 777 /var
          meta_url=redis://127.0.0.1/1
          test_result=true
          while IFS=, read -r jfs_option rsync_option status; do
            echo $jfs_option, $rsync_option, $status
            status=$(echo $status| xargs)
            if [ "$status" = "disable" ]; then 
              continue
            fi
            test -d jfs_sync_dir/ && rm jfs_sync_dir/ -rf 
            mkdir jfs_sync_dir/
            ./juicefs sync  source-dir/ jfs_sync_dir/ $jfs_option
            test -d rsync_dir/ && rm rsync_dir/ -rf 
            mkdir rsync_dir
            rsync -a source-dir/ rsync_dir/ $rsync_option
            printf '\ndiff between juicefs sync and rsync:\n juicefs sync %s\nrsync %s\n' "$jfs_option" "$rsync_option"| tee -a result.txt || true
            diff -ur jfs_sync_dir rsync_dir 2>&1 | tee -a result.txt || if [[ $? == 1 ]]; then  test_result=false; fi
          done < .github/workflows/resources/sync-options.txt
          while IFS=, read -r jfs_option rsync_option status; do
            echo $jfs_option, $rsync_option, $status
            status=$(echo $status| xargs)
            if [ "$status" = "disable" ]; then 
              continue
            fi
            mount_point=/tmp/sync-test/
            ./juicefs format $meta_url sync-test
            ./juicefs mount $meta_url $mount_point -d
            ./juicefs sync source_dir/ $mount_point
            test -d jfs_sync_dir && rm jfs_sync_dir/ -rf 
            mkdir jfs_sync_dir
            ./juicefs sync  $mount_point/ jfs_sync_dir/ $jfs_option --exclude ".accesslog" --exclude ".trash"
            test -d rsync_dir && rm rsync_dir/ -rf 
            mkdir rsync_dir
            rsync -a $mount_point/ rsync_dir/ $rsync_option --exclude ".accesslog" --exclude ".trash"
            printf '\ndiff between juicefs sync and rsync:\n juicefs sync %s\nrsync %s\n' "$jfs_option" "$rsync_option"| tee -a result.txt || true
            diff -ur jfs_sync_dir rsync_dir 2>&1 | tee -a result.txt || if [[ $? == 1 ]]; then  test_result=false; fi
          done < .github/workflows/resources/sync-options.txt
          if [ "$test_result" = true ]; then
            printf "Fatal: sync result is different between juicefs sync and rsync, please check result.txt in the artifact" 
            exit 1
          fi 
      - name: Save test reuslt
        if: ${{always()}}
        uses: actions/upload-artifact@v2
        with: 
          name: result.txt
          path: result.txt

      - name: Send Slack Notification
        if: ${{ failure() }}
        uses: juicedata/slack-notify-action@main
        with:
          channel-id: "${{ secrets.SLACK_CHANNEL_ID_FOR_PR_CHECK_NOTIFY }}"
          slack_bot_token: "${{ secrets.SLACK_BOT_TOKEN }}"  

      - name: Setup upterm session
        if: ${{ failure() }}
        uses: lhotari/action-upterm@v1